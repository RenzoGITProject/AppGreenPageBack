ô
_D:\Otros\UPN\CaliidadYPruebas\ProyectoGit\Back\AppGreenPageBack\GreenPageAPI\WeatherForecast.cs
	namespace 	
GreenPageAPI
 
{ 
public 

class 
WeatherForecast  
{ 
public 
DateOnly 
Date 
{ 
get "
;" #
set$ '
;' (
}) *
public 
int 
TemperatureC 
{  !
get" %
;% &
set' *
;* +
}, -
public		 
int		 
TemperatureF		 
=>		  "
$num		# %
+		& '
(		( )
int		) ,
)		, -
(		- .
TemperatureC		. :
/		; <
$num		= C
)		C D
;		D E
public 
string 
? 
Summary 
{  
get! $
;$ %
set& )
;) *
}+ ,
} 
} ª1
^D:\Otros\UPN\CaliidadYPruebas\ProyectoGit\Back\AppGreenPageBack\GreenPageAPI\Models\Usuario.cs
	namespace 	
GreenPageAPI
 
. 
Models 
{ 
[ 
Table 

(
 
$str 
) 
] 
public		 

class		 
Usuario		 
{

 
[ 	
Key	 
] 
public 
int 
? 
	IdUsuario 
{ 
get  #
;# $
set% (
;( )
}* +
public 
int 
? 
IdPerfil 
{ 
get "
;" #
set$ '
;' (
}) *
[ 	
Required	 
] 
[ 	
StringLength	 
( 
$num 
) 
] 
public 
string 

NomUsuario  
{! "
get# &
;& '
set( +
;+ ,
}- .
[ 	
Required	 
] 
[ 	
StringLength	 
( 
$num 
) 
] 
public 
string 

ApeUsuario  
{" #
get# &
;& '
set' *
;* +
}+ ,
[ 	
Required	 
] 
[ 	
StringLength	 
( 
$num 
) 
] 
public 
string 
dni 
{ 
get 
;  
set  #
;# $
}$ %
[ 	
Required	 
] 
[ 	
StringLength	 
( 
$num 
) 
] 
public 
string 
Login 
{ 
get !
;! "
set# &
;& '
}( )
[ 	
Required	 
] 
[   	
StringLength  	 
(   
$num   
)   
]   
public!! 
string!! 
Pass!! 
{!! 
get!!  
;!!  !
set!!" %
;!!% &
}!!' (
[## 	
StringLength##	 
(## 
$num## 
)## 
]## 
public$$ 
string$$ 
?$$ 
Pregunta$$ 
{$$  !
get$$" %
;$$% &
set$$' *
;$$* +
}$$, -
[&& 	
StringLength&&	 
(&& 
$num&& 
)&& 
]&& 
public'' 
string'' 
?'' 
	Respuesta''  
{''! "
get''# &
;''& '
set''( +
;''+ ,
}''- .
public)) 
DateTime)) 
?)) 
FecCreacion)) $
{))% &
get))' *
;))* +
set)), /
;))/ 0
}))1 2
public++ 
bool++ 
?++ 
isactive++ 
{++ 
get++ !
;++! "
set++" %
;++% &
}++& '
public-- 
bool-- 
IsValidPassword-- #
(--# $
)--$ %
{.. 	
return00 
!00 
string00 
.00 
IsNullOrEmpty00 (
(00( )
Pass00) -
)00- .
&&00/ 1
Pass11 
.11 
Length11 
>11  
$num11! "
&&11# %
Pass22 
.22 
Any22 
(22 
char22  
.22  !
IsUpper22! (
)22( )
&&22* ,
Pass33 
.33 
Any33 
(33 
char33  
.33  !
IsLower33! (
)33( )
&&33* ,
Pass44 
.44 
Any44 
(44 
char44  
.44  !
IsDigit44! (
)44( )
;44) *
}55 	
public77 
bool77 
IsValidLength77 !
(77! "
string77" (
username77) 1
)771 2
{88 	
return99 
username99 
.99 
Length99 "
>=99# %
$num99& '
&&99( *
username99+ 3
.993 4
Length994 :
<=99; =
$num99> @
;99@ A
}:: 	
public;; 
bool;; "
IsValidLengthRespuesta;; *
(;;* +
);;+ ,
{<< 	
return== 
	Respuesta== 
.== 
Trim== !
(==! "
)==" #
.==# $
Length==$ *
<===+ -
$num==. 0
;==0 1
}>> 	
public@@ 
bool@@ 
ContainsOnlyLetters@@ '
(@@' (
string@@( .
username@@/ 7
)@@7 8
{AA 	
returnCC 
usernameCC 
.CC 
AllCC 
(CC  
cCC  !
=>CC" $
charCC% )
.CC) *
IsLetterCC* 2
(CC2 3
cCC3 4
)CC4 5
||CC6 8
charCC9 =
.CC= >
IsWhiteSpaceCC> J
(CCJ K
cCCK L
)CCL M
)CCM N
;CCN O
}DD 	
publicFF 
boolFF $
ValidarEspaciosIzquierdaFF -
(FF- .
stringFF. 4
cadenaFF5 ;
)FF; <
{GG 	
stringII 
patternII 
=II  
$strII! C
;IIC D
RegexJJ 
regexJJ 
=JJ 
newJJ !
RegexJJ" '
(JJ' (
patternJJ( /
)JJ/ 0
;JJ0 1
returnLL 
regexLL 
.LL 
IsMatchLL $
(LL$ %
cadenaLL% +
)LL+ ,
;LL, -
}MM 	
publicPP 

boolPP 
IsValidEmailPP 
(PP 
stringPP #
emailPP$ )
)PP) *
{QQ 
stringSS 
patternSS 
=SS 
$strSS 6
;SS6 7
returnTT 
RegexTT 
.TT 
IsMatchTT 
(TT 
emailTT "
,TT" #
patternTT$ +
)TT+ ,
;TT, -
}UU 
}WW 
}XX  (
WD:\Otros\UPN\CaliidadYPruebas\ProyectoGit\Back\AppGreenPageBack\GreenPageAPI\Program.cs
Env 
. 
Load 
( 	
$str	 
) 
; 
var 
builder 
= 
WebApplication 
. 
CreateBuilder *
(* +
args+ /
)/ 0
;0 1
builder 
. 
Configuration 
. 
SetBasePath 
( 
	Directory 
. 
GetCurrentDirectory .
(. /
)/ 0
)0 1
. 
AddJsonFile 
( 
$str #
,# $
optional% -
:- .
false/ 4
,4 5
reloadOnChange6 D
:D E
trueF J
)J K
. #
AddEnvironmentVariables 
( 
) 
; 
builder 
. 
Services 
. 

AddSignalR 
( 
) 
; 
var 

dbPassword 
= 
Environment 
. "
GetEnvironmentVariable 3
(3 4
$str4 A
)A B
;B C
if 
( 
string 

.
 
IsNullOrEmpty 
( 

dbPassword #
)# $
)$ %
{ 
throw 	
new
 %
InvalidOperationException '
(' (
$str( a
)a b
;b c
} 
builder"" 
."" 
Services"" 
."" 
AddDbContext"" 
<"" 
GreenPageContext"" .
>"". /
(""/ 0
options""0 7
=>""8 :
options## 
.## 
UseSqlServer## 
(## 
builder##  
.##  !
Configuration##! .
.##. /
GetConnectionString##/ B
(##B C
$str##C V
)##V W
?##W X
.##X Y
Replace##Y `
(##` a
$str##a p
,##p q

dbPassword##r |
)##| }
)##} ~
)$$ 
;$$ 
builder(( 
.(( 
Services(( 
.(( 
AddCors(( 
((( 
options((  
=>((! #
{)) 
options** 
.** 
AddDefaultPolicy** 
(** 
builder** $
=>**% '
{++ 
builder,, 
.,, 
WithOrigins,, 
(,, 
$str,, 3
),,3 4
... 
AllowAnyHeader.. 
(..  
)..  !
.// 
AllowAnyMethod// 
(//  
)//  !
.00 
AllowCredentials00 !
(00! "
)00" #
;00# $
}11 
)11 
;11 
}22 
)22 
;22 
builder:: 
.:: 
Services:: 
.:: 
AddControllers:: 
(::  
)::  !
;::! "
builder<< 
.<< 
Services<< 
.<< #
AddEndpointsApiExplorer<< (
(<<( )
)<<) *
;<<* +
builder== 
.== 
Services== 
.== 
AddSwaggerGen== 
(== 
)==  
;==  !
var@@ 
app@@ 
=@@ 	
builder@@
 
.@@ 
Build@@ 
(@@ 
)@@ 
;@@ 
ifCC 
(CC 
appCC 
.CC 
EnvironmentCC 
.CC 
IsDevelopmentCC !
(CC! "
)CC" #
)CC# $
{DD 
appEE 
.EE 

UseSwaggerEE 
(EE 
)EE 
;EE 
appFF 
.FF 
UseSwaggerUIFF 
(FF 
)FF 
;FF 
}GG 
appII 
.II 
UseHttpsRedirectionII 
(II 
)II 
;II 
appKK 
.KK 
UseAuthorizationKK 
(KK 
)KK 
;KK 
appMM 
.MM 

UseRoutingMM 
(MM 
)MM 
;MM 
appNN 
.NN 
UseCorsNN 
(NN 
)NN 
;NN 
appOO 
.OO 
UseEndpointsOO 
(OO 
	endpointsOO 
=>OO 
{PP 
	endpointsQQ 
.QQ 
MapControllersQQ 
(QQ 
)QQ 
;QQ 
}RR 
)RR 
;RR 
appVV 
.VV 
MapHubVV 

<VV
 
TimeHubVV 
>VV 
(VV 
$strVV 
)VV 
;VV  
appWW 
.WW 
MapHubWW 

<WW
 
TimeHubWW 
>WW 
(WW 
$strWW !
)WW! "
;WW" #
appZZ 
.ZZ 
MapControllersZZ 
(ZZ 
)ZZ 
;ZZ 
app\\ 
.\\ 
Run\\ 
(\\ 
)\\ 	
;\\	 
¡
^D:\Otros\UPN\CaliidadYPruebas\ProyectoGit\Back\AppGreenPageBack\GreenPageAPI\Models\Subasta.cs
	namespace 	
GreenPageAPI
 
. 
Models 
{ 
[ 
Table 

(
 
$str 
) 
] 
public 

class 
Subasta 
{ 
[		 	
Key			 
]		 
public

 
int

 
?

 
	IdSubasta

 
{

 
get

  #
;

# $
set

% (
;

( )
}

* +
[ 	
Required	 
] 
public 
int 
? 
IdLibro 
{ 
get !
;! "
set# &
;& '
}( )
[ 	

ForeignKey	 
( 
$str 
) 
] 
public 
Libro 
Libro 
{ 
get  
;  !
set" %
;% &
}' (
[ 	
Required	 
] 
public 
DateTime 
? 
	FecInicio "
{# $
get% (
;( )
set* -
;- .
}/ 0
[ 	
Required	 
] 
public 
DateTime 
? 
FecFinal !
{" #
get$ '
;' (
set) ,
;, -
}. /
[ 	
Required	 
] 
public 
double 

PrecioBase  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
int 
? 
	IdUsuario 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
	StartTime "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
int 
? 
Duration 
{ 
get "
;" #
set$ '
;' (
}) *
public 
DateTime 
? 
EndTime  
{! "
get# &
;& '
set( +
;+ ,
}- .
public   
bool   
?   
isclosed   
{   
get    #
;  # $
set  % (
;  ( )
}  * +
}%% 
}&& ÷
]D:\Otros\UPN\CaliidadYPruebas\ProyectoGit\Back\AppGreenPageBack\GreenPageAPI\Models\Oferta.cs
	namespace 	
GreenPageAPI
 
. 
Models 
{ 
[ 
Table 

(
 
$str 
) 
] 
public 

class 
Oferta 
{ 
[		 	
Key			 
]		 
public

 
int

 
IdOferta

 
{

 
get

 !
;

! "
set

# &
;

& '
}

( )
[ 	
Required	 
] 
public 
int 
? 
	IdSubasta 
{ 
get  #
;# $
set% (
;( )
}* +
[ 	

ForeignKey	 
( 
$str 
)  
]  !
public 
Usuario 
? 
usuario 
{  !
get" %
;% &
set' *
;* +
}, -
[ 	

ForeignKey	 
( 
$str 
)  
]  !
public 
Subasta 
? 
subasta 
{  !
get! $
;$ %
set% (
;( )
}) *
[ 	
Required	 
] 
public 
double 
PrecioOferta "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
DateTime 
? 
	FecOferta "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
int 
? 
	IdUsuario 
{ 
get  #
;# $
set% (
;( )
}* +
} 
}  
\D:\Otros\UPN\CaliidadYPruebas\ProyectoGit\Back\AppGreenPageBack\GreenPageAPI\Models\Libro.cs
	namespace 	
GreenPageAPI
 
. 
Models 
{ 
[ 
Table 

(
 
$str 
) 
] 
public 

class 
Libro 
{ 
[		 	
Key			 
]		 
public

 
int

 
?

 
IdLibro

 
{

 
get

 !
;

! "
set

# &
;

& '
}

( )
[ 	
Required	 
] 
public 
int 
? 
IdEditorial 
{  !
get" %
;% &
set' *
;* +
}, -
[ 	
Required	 
] 
public 
int 
? 
IdGenero 
{ 
get "
;" #
set$ '
;' (
}) *
[ 	

ForeignKey	 
( 
$str !
)! "
]" #
public 
	Editorial 
	Editorial "
{# $
get% (
;( )
set* -
;- .
}/ 0
[ 	

ForeignKey	 
( 
$str 
) 
]  
public 
Genero 
Genero 
{ 
get "
;" #
set$ '
;' (
}) *
[ 	
Required	 
] 
[ 	
StringLength	 
( 
$num 
) 
] 
public 
string 
	Destitulo 
{  !
get" %
;% &
set' *
;* +
}, -
[ 	
Required	 
] 
[ 	
StringLength	 
( 
$num 
) 
] 
public 
string 
Estado 
{ 
get "
;" #
set$ '
;' (
}) *
[!! 	
Required!!	 
]!! 
["" 	
StringLength""	 
("" 
$num"" 
)"" 
]"" 
public## 
string## 
ISBN## 
{## 
get##  
;##  !
set##" %
;##% &
}##' (
[%% 	
Required%%	 
]%% 
[&& 	
StringLength&&	 
(&& 
$num&& 
)&& 
]&& 
public'' 
string'' 
Sinopsys'' 
{''  
get''! $
;''$ %
set''& )
;'') *
}''+ ,
public)) 
int)) 
?)) 
	IdUsuario)) 
{)) 
get))  #
;))# $
set))% (
;))( )
}))* +
}** 
[-- 
Table-- 

(--
 
$str-- 
)-- 
]-- 
public.. 

class.. 
	Editorial.. 
{// 
[00 	
Key00	 
]00 
public11 
int11 
?11 
ideditorial11 
{11  !
get11" %
;11% &
set11' *
;11* +
}11, -
public22 
string22 
deseditorial22 "
{22# $
get22% (
;22( )
set22* -
;22- .
}22/ 0
}33 
[55 
Table55 

(55
 
$str55 
)55 
]55 
public66 

class66 
Genero66 
{77 
[88 	
Key88	 
]88 
public99 
int99 
?99 
idgenero99 
{99 
get99 "
;99" #
set99$ '
;99' (
}99) *
public:: 
string:: 
	desgenero:: 
{::  !
get::" %
;::% &
set::' *
;::* +
}::, -
};; 
}== à
gD:\Otros\UPN\CaliidadYPruebas\ProyectoGit\Back\AppGreenPageBack\GreenPageAPI\Models\GreenPageContext.cs
	namespace 	
GreenPageAPI
 
. 
Models 
{ 
public 

class 
GreenPageContext !
:" #
	DbContext$ -
{ 
public 
GreenPageContext 
(  
DbContextOptions  0
<0 1
GreenPageContext1 A
>A B
optionsC J
)J K
:L M
baseN R
(R S
optionsS Z
)Z [
{\ ]
}^ _
public		 
DbSet		 
<		 
Usuario		 
>		 
Usuarios		 &
{		' (
get		( +
;		+ ,
set		- 0
;		0 1
}		1 2
public

 
DbSet

 
<

 
Libro

 
>

 
Libros

 "
{

# $
get

% (
;

( )
set

* -
;

- .
}

/ 0
public 
DbSet 
< 
Subasta 
> 
Subastas &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
DbSet 
< 
Oferta 
> 
Ofertas $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
DbSet 
< 
	Editorial 
> 
Editoriales  +
{, -
get- 0
;0 1
set1 4
;4 5
}5 6
public 
DbSet 
< 
Genero 
> 
Generos $
{% &
get& )
;) *
set* -
;- .
}. /
} 
} Æ
\D:\Otros\UPN\CaliidadYPruebas\ProyectoGit\Back\AppGreenPageBack\GreenPageAPI\Hubs\TimeHub.cs
public 
class 
TimeHub 
: 
Hub 
{ 
private 
static 
Timer 
_timer 
;  
private		 
static		 
IHubContext		 
<		 
TimeHub		 &
>		& '
_hubContext		( 3
;		3 4
public 

TimeHub 
( 
IHubContext 
< 
TimeHub &
>& '

hubContext( 2
)2 3
{ 
_hubContext 
= 

hubContext  
;  !
StartSendingTime 
( 
) 
; 
} 
private 
void 
StartSendingTime !
(! "
)" #
{ 
if 

( 
_timer 
== 
null 
) 
{ 	
_timer 
= 
new 
Timer 
( #
SendServerTimeToClients 6
,6 7
null8 <
,< =
TimeSpan> F
.F G
ZeroG K
,K L
TimeSpanM U
.U V
FromSecondsV a
(a b
$numb c
)c d
)d e
;e f
} 	
} 
private 
async 
void #
SendServerTimeToClients .
(. /
object/ 5
state6 ;
); <
{ 
var 
currentTime 
= 
DateTime "
." #
UtcNow# )
.) *
ToString* 2
(2 3
$str3 6
)6 7
;7 8
await 
_hubContext 
. 
Clients !
.! "
All" %
.% &
	SendAsync& /
(/ 0
$str0 C
,C D
currentTimeE P
)P Q
;Q R
} 
} 
uD:\Otros\UPN\CaliidadYPruebas\ProyectoGit\Back\AppGreenPageBack\GreenPageAPI\Controllers\WeatherForecastController.cs
	namespace 	
GreenPageAPI
 
. 
Controllers "
{ 
[ 
ApiController 
] 
[ 
Route 

(
 
$str 
) 
] 
public 

class %
WeatherForecastController *
:+ ,
ControllerBase- ;
{ 
private		 
static		 
readonly		 
string		  &
[		& '
]		' (
	Summaries		) 2
=		3 4
new		5 8
[		8 9
]		9 :
{

 	
$str 
, 
$str !
,! "
$str# +
,+ ,
$str- 3
,3 4
$str5 ;
,; <
$str= C
,C D
$strE L
,L M
$strN S
,S T
$strU a
,a b
$strc n
} 	
;	 

private 
readonly 
ILogger  
<  !%
WeatherForecastController! :
>: ;
_logger< C
;C D
public %
WeatherForecastController (
(( )
ILogger) 0
<0 1%
WeatherForecastController1 J
>J K
loggerL R
)R S
{ 	
_logger 
= 
logger 
; 
} 	
[ 	
HttpGet	 
( 
Name 
= 
$str ,
), -
]- .
public 
IEnumerable 
< 
WeatherForecast *
>* +
Get, /
(/ 0
)0 1
{ 	
return 

Enumerable 
. 
Range #
(# $
$num$ %
,% &
$num' (
)( )
.) *
Select* 0
(0 1
index1 6
=>7 9
new: =
WeatherForecast> M
{ 
Date 
= 
DateOnly 
.  
FromDateTime  ,
(, -
DateTime- 5
.5 6
Now6 9
.9 :
AddDays: A
(A B
indexB G
)G H
)H I
,I J
TemperatureC 
= 
Random %
.% &
Shared& ,
., -
Next- 1
(1 2
-2 3
$num3 5
,5 6
$num7 9
)9 :
,: ;
Summary 
= 
	Summaries #
[# $
Random$ *
.* +
Shared+ 1
.1 2
Next2 6
(6 7
	Summaries7 @
.@ A
LengthA G
)G H
]H I
} 
) 
. 
ToArray 
( 
) 
; 
} 	
}   
}!! Àj
mD:\Otros\UPN\CaliidadYPruebas\ProyectoGit\Back\AppGreenPageBack\GreenPageAPI\Controllers\UsuarioController.cs
	namespace		 	
GreenPageAPI		
 
.		 
Controllers		 "
{

 
[ 
ApiController 
] 
[ 
Route 

(
 
$str 
) 
] 
public 

class 
UsuarioController "
:# $
ControllerBase& 4
{ 
private 
readonly 
GreenPageContext )
_context* 2
;2 3
public 
UsuarioController  
(  !
GreenPageContext! 1
context2 9
)9 :
{ 	
_context 
= 
context 
; 
} 	
[ 	
HttpPut	 
( 
$str %
)% &
]& '
public 
async 
Task 
< 
IActionResult '
>' (
CambiarEstado) 6
(6 7
int7 :
id; =
,= >
[? @
FromBody@ H
]H I
boolJ N
nuevoEstadoO Z
)Z [
{ 	
var 
usuario 
= 
await 
_context  (
.( )
Usuarios) 1
.1 2
	FindAsync2 ;
(; <
id< >
)> ?
;? @
if 
( 
usuario 
== 
null 
)  
{ 
return   
NotFound   
(    
new    #
{  $ %
message  & -
=  . /
$str  0 G
}  H I
)  I J
;  J K
}!! 
usuario$$ 
.$$ 
isactive$$ 
=$$ 
nuevoEstado$$ *
;$$* +
_context%% 
.%% 
Entry%% 
(%% 
usuario%% "
)%%" #
.%%# $
State%%$ )
=%%* +
EntityState%%, 7
.%%7 8
Modified%%8 @
;%%@ A
try'' 
{(( 
await)) 
_context)) 
.)) 
SaveChangesAsync)) /
())/ 0
)))0 1
;))1 2
return** 
Ok** 
(** 
new** 
{** 
message**  '
=**( )
$str*** L
}**M N
)**N O
;**O P
}++ 
catch,, 
(,, 
DbUpdateException,, $
),,$ %
{-- 
return.. 

StatusCode.. !
(..! "
$num.." %
,..% &
new..' *
{..+ ,
message..- 4
=..5 6
$str..7 V
}..W X
)..X Y
;..Y Z
}// 
}00 	
[33 	
HttpGet33	 
(33 
$str33 
)33 
]33 
public44 
async44 
Task44 
<44 
ActionResult44 &
<44& '
IEnumerable44' 2
<442 3
Usuario443 :
>44: ;
>44; <
>44< =
GetUsuarios44> I
(44I J
)44J K
{55 	
var66 
usuarios66 
=66 
await66  
_context66! )
.66) *
Usuarios66* 2
.77 
Select77 
(77 
u77 
=>77 
new77 
{88 
u99 
.99 
	IdUsuario99 
,99 
PerfilNombre:: 
=:: 
u::  
.::  !
IdPerfil::! )
==::* ,
$num::- .
?::/ 0
$str::1 G
:::H I
$str::J Y
,::Y Z
u;; 
.;; 
IdPerfil;; 
,;; 
u<< 
.<< 
dni<< 
,<< 
u== 
.== 

NomUsuario== 
,== 
u>> 
.>> 

ApeUsuario>> 
,>> 
u?? 
.?? 
Login?? 
,?? 
u@@ 
.@@ 
Pass@@ 
,@@ 
uAA 
.AA 
FecCreacionAA 
,AA 
uBB 
.BB 
isactiveBB 
}CC 
)CC 
.DD 
ToListAsyncDD 
(DD 
)DD 
;DD 
returnFF 
OkFF 
(FF 
usuariosFF 
)FF 
;FF 
}GG 	
[II 	
HttpPostII	 
(II 
$strII %
)II% &
]II& '
publicJJ 
asyncJJ 
TaskJJ 
<JJ 
IActionResultJJ '
>JJ' (
CambiarContrasenaJJ) :
(JJ: ;
[JJ; <
FromBodyJJ< D
]JJD E
UsuarioModelJJF R
usuarioModelJJS _
)JJ_ `
{KK 	
ifLL 
(LL 
!LL 

ModelStateLL 
.LL  
IsValidLL  '
)LL' (
{MM 
returnNN 

BadRequestNN %
(NN% &

ModelStateNN& 0
)NN0 1
;NN1 2
}OO 
ifQQ 
(QQ 
stringQQ 
.QQ 
IsNullOrWhiteSpaceQQ -
(QQ- .
usuarioModelQQ. :
.QQ: ;
PassQQ; ?
)QQ? @
)QQ@ A
{RR 
returnSS 

BadRequestSS %
(SS% &
$strSS& K
)SSK L
;SSL M
}TT 
varWW 
userWW 
=WW 
awaitWW  
_contextWW! )
.WW) *
UsuariosWW* 2
.WW2 3
FirstOrDefaultAsyncWW3 F
(WWF G
uWWG H
=>WWI K
uXX 
.XX 
	IdUsuarioXX 
==XX 
usuarioModelXX +
.XX+ ,
UserXX, 0
)XX0 1
;XX1 2
ifZZ 
(ZZ 
userZZ 
==ZZ 
nullZZ  
)ZZ  !
{[[ 
return\\ 
NotFound\\ #
(\\# $
$str\\$ Y
)\\Y Z
;\\Z [
}]] 
var`` 
passwordPattern`` #
=``$ %
$str``& K
;``K L
ifaa 
(aa 
!aa 
Regexaa 
.aa 
IsMatchaa "
(aa" #
usuarioModelaa# /
.aa/ 0
Passaa0 4
,aa4 5
passwordPatternaa6 E
)aaE F
)aaF G
{bb 
returncc 

BadRequestcc %
(cc% &
$str	cc& 
)
cc 
;
cc 
}dd 
userhh 
.hh 
Passhh 
=hh 
BCrypthh "
.hh" #
Nethh# &
.hh& '
BCrypthh' -
.hh- .
HashPasswordhh. :
(hh: ;
usuarioModelhh; G
.hhG H
PasshhH L
)hhL M
;hhM N
awaitkk 
_contextkk 
.kk 
SaveChangesAsynckk /
(kk/ 0
)kk0 1
;kk1 2
returnmm 
Okmm 
(mm 
newmm 
{mm 
messagemm  '
=mm( )
$strmm* P
}mmQ R
)mmR S
;mmS T
}nn 	
[qq 	

HttpDeleteqq	 
(qq 
$strqq 
)qq 
]qq 
publicrr 
asyncrr 
Taskrr 
<rr 
IActionResultrr '
>rr' (
EliminarUsuariorr) 8
(rr8 9
intrr9 <
idrr= ?
)rr? @
{ss 	
varuu 
usuariouu 
=uu 
awaituu 
_contextuu  (
.uu( )
Usuariosuu) 1
.uu1 2
	FindAsyncuu2 ;
(uu; <
iduu< >
)uu> ?
;uu? @
ifvv 
(vv 
usuariovv 
==vv 
nullvv 
)vv  
{ww 
returnxx 
NotFoundxx 
(xx  
newxx  #
{xx$ %
messagexx& -
=xx. /
$strxx0 G
}xxH I
)xxI J
;xxJ K
}yy 
_context|| 
.|| 
Usuarios|| 
.|| 
Remove|| $
(||$ %
usuario||% ,
)||, -
;||- .
try~~ 
{ 
await
 
_context
 
.
 
SaveChangesAsync
 /
(
/ 0
)
0 1
;
1 2
return
 
Ok
 
(
 
new
 
{
 
message
  '
=
( )
$str
* K
}
L M
)
M N
;
N O
}
 
catch
 
(
 
DbUpdateException
 $
)
$ %
{
 
return
 

StatusCode
 !
(
! "
$num
" %
,
% &
new
' *
{
+ ,
message
- 4
=
5 6
$str
7 U
}
V W
)
W X
;
X Y
}
 
}
 	
[
 	
HttpPut
	 
(
 
$str
 
)
 
]
 
public
 
async
 
Task
 
<
 
IActionResult
 '
>
' (
EditarUsuario
) 6
(
6 7
int
7 :
id
; =
,
= >
[
? @
FromBody
@ H
]
H I
UsuarioUpdt
J U 
usuarioActualizado
V h
)
h i
{
 	
var
 
usuario
 
=
 
await
 
_context
  (
.
( )
Usuarios
) 1
.
1 2
	FindAsync
2 ;
(
; <
id
< >
)
> ?
;
? @
if
 
(
 
usuario
 
==
 
null
 
)
  
{
 
return
 
NotFound
 
(
  
new
  #
{
$ %
message
& -
=
. /
$str
0 G
}
H I
)
I J
;
J K
}
 
usuario
 
.
 
IdPerfil
 
=
  
usuarioActualizado
 1
.
1 2
idPerfil
2 :
;
: ;
usuario
 
.
 

NomUsuario
 
=
   
usuarioActualizado
! 3
.
3 4

nomUsuario
4 >
;
> ?
usuario
 
.
 

ApeUsuario
 
=
   
usuarioActualizado
! 3
.
3 4

apeUsuario
4 >
;
> ?
usuario
 
.
 
dni
 
=
  
usuarioActualizado
 ,
.
, -
dni
- 0
;
0 1
usuario
 
.
 
Login
 
=
  
usuarioActualizado
 .
.
. /
login
/ 4
;
4 5
_context
 
.
 
Entry
 
(
 
usuario
 "
)
" #
.
# $
State
$ )
=
* +
EntityState
, 7
.
7 8
Modified
8 @
;
@ A
try
 
{
 
await
   
_context
   
.
   
SaveChangesAsync
   /
(
  / 0
)
  0 1
;
  1 2
return
¡¡ 
Ok
¡¡ 
(
¡¡ 
new
¡¡ 
{
¡¡ 
message
¡¡  '
=
¡¡( )
$str
¡¡* M
}
¡¡N O
)
¡¡O P
;
¡¡P Q
}
¢¢ 
catch
££ 
(
££ 
DbUpdateException
££ $
)
££$ %
{
¤¤ 
return
¥¥ 

StatusCode
¥¥ !
(
¥¥! "
$num
¥¥" %
,
¥¥% &
new
¥¥' *
{
¥¥+ ,
message
¥¥- 4
=
¥¥5 6
$str
¥¥7 W
}
¥¥X Y
)
¥¥Y Z
;
¥¥Z [
}
¦¦ 
}
§§ 	
}
«« 
public
­­ 

class
­­ 
UsuarioUpdt
­­ 
{
®® 
public
¯¯ 
int
¯¯ 
idPerfil
¯¯ 
{
¯¯ 
get
¯¯  
;
¯¯  !
set
¯¯! $
;
¯¯$ %
}
¯¯% &
public
°° 
string
°° 

nomUsuario
°°  
{
°°! "
get
°°" %
;
°°% &
set
°°& )
;
°°) *
}
°°* +
public
±± 
string
±± 

apeUsuario
±±  
{
±±! "
get
±±" %
;
±±% &
set
±±& )
;
±±) *
}
±±* +
public
²² 
string
²² 
dni
²² 
{
²² 
get
²² 
;
²² 
set
²² !
;
²²! "
}
²²" #
public
³³ 
string
³³ 
login
³³ 
{
³³ 
get
³³ 
;
³³  
set
³³  #
;
³³# $
}
³³$ %
}
µµ 
public
·· 

class
·· 
UsuarioModel
·· 
{
¸¸ 
[
¹¹ 	
Required
¹¹	 
]
¹¹ 
public
ºº 
int
ºº 
User
ºº 
{
ºº 
get
ºº 
;
ºº 
set
ºº "
;
ºº" #
}
ºº$ %
[
¼¼ 	
Required
¼¼	 
]
¼¼ 
public
½½ 
string
½½ 
Pass
½½ 
{
½½ 
get
½½ 
;
½½  
set
½½  #
;
½½# $
}
½½$ %
}
¾¾ 
}ÀÀ Òy
mD:\Otros\UPN\CaliidadYPruebas\ProyectoGit\Back\AppGreenPageBack\GreenPageAPI\Controllers\SubastaController.cs
	namespace 	
GreenPageAPI
 
. 
Controllers "
{ 
[		 
ApiController		 
]		 
[

 
Route

 

(


 
$str

 
)

 
]

 
public 

class 
SubastaController "
:# $

Controller% /
{ 
private 
readonly 
GreenPageContext )
_context* 2
;2 3
public 
SubastaController  
(  !
GreenPageContext! 1
context2 9
)9 :
{ 	
_context 
= 
context 
; 
} 	
[ 	
HttpGet	 
] 
public 
async 
Task 
< 
ActionResult &
<& '
IEnumerable' 2
<2 3
Subasta3 :
>: ;
>; <
>< =
GetSubastas> I
(I J
)J K
{ 	
return 
await 
_context !
.! "
Subastas" *
.* +
ToListAsync+ 6
(6 7
)7 8
;8 9
} 	
[ 	
HttpGet	 
( 
$str ,
), -
]- .
public 
async 
Task 
< 
ActionResult &
<& '
IEnumerable' 2
<2 3
dynamic3 :
>: ;
>; <
>< =%
ListarSubastasConDetalles> W
(W X
)X Y
{ 	
var 
subastasConDetalles #
=$ %
await& +
_context, 4
.4 5
Subastas5 =
. 
Include 
( 
s 
=> 
s 
.  
Libro  %
)% &
. 
Select 
( 
s 
=> 
new  
{   
idlibro!! 
=!! 
s!! 
.!!  
IdLibro!!  '
,!!' (
	idsubasta"" 
="" 
s""  !
.""! "
	IdSubasta""" +
,""+ ,
TituloLibro## 
=##  !
s##" #
.### $
Libro##$ )
.##) *
	Destitulo##* 3
,##3 4
estado$$ 
=$$ 
s$$ 
.$$ 
Libro$$ $
.$$$ %
Estado$$% +
,$$+ ,
Sinopsis%% 
=%% 
s%%  
.%%  !
Libro%%! &
.%%& '
Sinopsys%%' /
,%%/ 0
FechaInicio&& 
=&&  !
s&&" #
.&&# $
	FecInicio&&$ -
,&&- .
FechaFin'' 
='' 
s''  
.''  !
FecFinal''! )
,'') *

PrecioBase(( 
=((  
s((! "
.((" #

PrecioBase((# -
,((- .
isclosed)) 
=)) 
s))  
.))  !
isclosed))! )
}** 
)** 
.++ 
OrderByDescending++ "
(++" #
s++# $
=>++% '
s++( )
.++) *
FechaFin++* 2
)++2 3
.,, 
ToListAsync,, 
(,, 
),, 
;,, 
return.. 
Ok.. 
(.. 
subastasConDetalles.. )
)..) *
;..* +
}// 	
[11 	
HttpGet11	 
(11 
$str11 
)11 
]11 
public22 
async22 
Task22 
<22 
ActionResult22 &
<22& '
Subasta22' .
>22. /
>22/ 0

GetSubasta221 ;
(22; <
int22< ?
id22@ B
)22B C
{33 	
var44 
subasta44 
=44 
await44 
_context44  (
.44( )
Subastas44) 1
.55( )
Where55) .
(55. /
s55/ 0
=>551 3
s554 5
.555 6
	IdSubasta556 ?
==55@ B
id55C E
)55E F
.66( )
FirstOrDefaultAsync66) <
(66< =
)66= >
;66> ?
if88 
(88 
subasta88 
==88 
null88 
)88  
{99 
return:: 
NotFound:: 
(::  
)::  !
;::! "
};; 
return== 
Ok== 
(== 
subasta== 
)== 
;== 
}>> 	
[BB 	
HttpPostBB	 
]BB 
publicCC 
asyncCC 
TaskCC 
<CC 
ActionResultCC &
<CC& '
SubastaCC' .
>CC. /
>CC/ 0
PostSubastaCC1 <
(CC< =
SubastaCC= D
subastaCCE L
)CCL M
{DD 	
_contextEE 
.EE 
SubastasEE 
.EE 
AddEE !
(EE! "
subastaEE" )
)EE) *
;EE* +
awaitFF 
_contextFF 
.FF 
SaveChangesAsyncFF +
(FF+ ,
)FF, -
;FF- .
returnHH 
CreatedAtActionHH "
(HH" #
nameofHH# )
(HH) *

GetSubastaHH* 4
)HH4 5
,HH5 6
newHH7 :
{HH; <
idHH= ?
=HH@ A
subastaHHB I
.HHI J
	IdSubastaHHJ S
}HHT U
,HHU V
subastaHHW ^
)HH^ _
;HH_ `
}II 	
[KK 	
HttpPutKK	 
(KK 
$strKK 
)KK 
]KK 
publicLL 
asyncLL 
TaskLL 
<LL 
IActionResultLL '
>LL' (

PutSubastaLL) 3
(LL3 4
intLL4 7
idLL8 :
,LL: ;
SubastaLL< C
subastaLLD K
)LLK L
{MM 	
ifNN 
(NN 
idNN 
!=NN 
subastaNN 
.NN 
	IdSubastaNN '
)NN' (
{OO 
returnPP 

BadRequestPP !
(PP! "
)PP" #
;PP# $
}QQ 
_contextSS 
.SS 
EntrySS 
(SS 
subastaSS "
)SS" #
.SS# $
StateSS$ )
=SS* +
EntityStateSS, 7
.SS7 8
ModifiedSS8 @
;SS@ A
tryUU 
{VV 
awaitWW 
_contextWW 
.WW 
SaveChangesAsyncWW /
(WW/ 0
)WW0 1
;WW1 2
}XX 
catchYY 
(YY (
DbUpdateConcurrencyExceptionYY /
)YY/ 0
{ZZ 
if[[ 
([[ 
![[ 
_context[[ 
.[[ 
Subastas[[ &
.[[& '
Any[[' *
([[* +
e[[+ ,
=>[[- /
e[[0 1
.[[1 2
	IdSubasta[[2 ;
==[[< >
id[[? A
)[[A B
)[[B C
{\\ 
return]] 
NotFound]] #
(]]# $
)]]$ %
;]]% &
}^^ 
else__ 
{`` 
throwaa 
;aa 
}bb 
}cc 
returndd 
	NoContentdd 
(dd 
)dd 
;dd 
}ee 	
[gg 	

HttpDeletegg	 
(gg 
$strgg 
)gg 
]gg 
publichh 
asynchh 
Taskhh 
<hh 
IActionResulthh '
>hh' (
DeleteSubastahh) 6
(hh6 7
inthh7 :
idhh; =
)hh= >
{ii 	
varjj 
subastajj 
=jj 
awaitjj 
_contextjj  (
.jj( )
Subastasjj) 1
.jj1 2
	FindAsyncjj2 ;
(jj; <
idjj< >
)jj> ?
;jj? @
ifkk 
(kk 
subastakk 
==kk 
nullkk 
)kk  
{ll 
returnmm 
NotFoundmm 
(mm  
)mm  !
;mm! "
}nn 
_contextpp 
.pp 
Subastaspp 
.pp 
Removepp $
(pp$ %
subastapp% ,
)pp, -
;pp- .
awaitqq 
_contextqq 
.qq 
SaveChangesAsyncqq +
(qq+ ,
)qq, -
;qq- .
returnss 
	NoContentss 
(ss 
)ss 
;ss 
}tt 	
[vv 	
HttpPostvv	 
(vv 
$strvv 
)vv 
]vv 
publicww 
asyncww 
Taskww 
<ww 
IActionResultww '
>ww' (
IniciarSubastaww) 7
(ww7 8
[ww8 9
FromBodyww9 A
]wwA B
intwwC F
	idSubastawwG P
)wwP Q
{xx 	
varyy 
subastayy 
=yy 
awaityy 
_contextyy  (
.yy( )
Subastasyy) 1
.yy1 2
	FindAsyncyy2 ;
(yy; <
	idSubastayy< E
)yyE F
;yyF G
if{{ 
({{ 
subasta{{ 
=={{ 
null{{ 
){{  
{|| 
return}} 
NotFound}} 
(}}  
$str}}  S
)}}S T
;}}T U
}~~ 
if
 
(
 
subasta
 
.
 
isclosed
  
==
! #
true
$ (
)
( )
{
 
return
 
NotFound
 
(
  
$str
  E
)
E F
;
F G
}
 
if
 
(
 
!
 
subasta
 
.
 
	StartTime
 &
.
& '
HasValue
' /
)
/ 0
{
 
var
 
tiempoDuracion
 &
=
' (
TimeSpan
) 1
.
1 2
FromSeconds
2 =
(
= >
$num
> @
)
@ A
;
A B
subasta
 
.
 
isclosed
 $
=
% &
false
' ,
;
, -
subasta
 
.
 
	StartTime
 %
=
& '
DateTime
( 0
.
0 1
UtcNow
1 7
;
7 8
subasta
 
.
 
EndTime
 #
=
$ %
subasta
& -
.
- .
	StartTime
. 7
.
7 8
Value
8 =
.
= >
Add
> A
(
A B
tiempoDuracion
B P
)
P Q
;
Q R
_context
 
.
 
Subastas
 %
.
% &
Update
& ,
(
, -
subasta
- 4
)
4 5
;
5 6
await
 
_context
 "
.
" #
SaveChangesAsync
# 3
(
3 4
)
4 5
;
5 6
}
 
return
 
Ok
 
(
 
new
 
{
 
	startTime
  )
=
* +
subasta
, 3
.
3 4
	StartTime
4 =
,
= >
endTime
? F
=
G H
subasta
I P
.
P Q
EndTime
Q X
}
Y Z
)
Z [
;
[ \
}
 	
[
 	
HttpGet
	 
(
 
$str
 '
)
' (
]
( )
public
 
async
 
Task
 
<
 
IActionResult
 '
>
' (#
ObtenerTiempoRestante
) >
(
> ?
int
? B
id
C E
)
E F
{
 	
var
 
subasta
 
=
 
await
 
_context
  (
.
( )
Subastas
) 1
.
1 2
	FindAsync
2 ;
(
; <
id
< >
)
> ?
;
? @
if
 
(
 
subasta
 
==
 
null
 
||
  "
subasta
# *
.
* +
EndTime
+ 2
==
3 5
null
6 :
)
: ;
{
 
return
   
NotFound
   
(
    
)
    !
;
  ! "
}
¡¡ 
var
¥¥ 
tiempoRestante
¥¥ 
=
¥¥  
(
¥¥! "
int
¥¥" %
)
¥¥% &
Math
¥¥& *
.
¥¥* +
Max
¥¥+ .
(
¥¥. /
$num
¥¥/ 0
,
¥¥0 1
(
¥¥2 3
subasta
¥¥3 :
.
¥¥: ;
EndTime
¥¥; B
.
¥¥B C
Value
¥¥C H
-
¥¥I J
DateTime
¥¥K S
.
¥¥S T
UtcNow
¥¥T Z
)
¥¥Z [
.
¥¥[ \
TotalSeconds
¥¥\ h
)
¥¥h i
;
¥¥i j
return
¨¨ 
Ok
¨¨ 
(
¨¨ 
new
¨¨ 
{
¨¨ 
tiempoRestante
¨¨ *
}
¨¨+ ,
)
¨¨, -
;
¨¨- .
}
©© 	
[
­­ 	
HttpGet
­­	 
(
­­ 
$str
­­ &
)
­­& '
]
­­' (
public
®® 
async
®® 
Task
®® 
<
®® 
IActionResult
®® '
>
®®' (
CerrarSubasta
®®) 6
(
®®6 7
int
®®7 :
id
®®; =
)
®®= >
{
¯¯ 	
var
°° 
subasta
°° 
=
°° 
await
°° 
_context
°°  (
.
°°( )
Subastas
°°) 1
.
°°1 2
	FindAsync
°°2 ;
(
°°; <
id
°°< >
)
°°> ?
;
°°? @
if
±± 
(
±± 
subasta
±± 
==
±± 
null
±± 
||
±±  "
subasta
±±# *
.
±±* +
	StartTime
±±+ 4
==
±±5 7
null
±±8 <
)
±±< =
{
²² 
return
³³ 
NotFound
³³ 
(
³³  
$str
³³  V
)
³³V W
;
³³W X
}
´´ 
subasta
¶¶ 
.
¶¶ 
isclosed
¶¶ 
=
¶¶ 
true
¶¶ #
;
¶¶# $
_context
·· 
.
·· 
Subastas
·· 
.
·· 
Update
·· $
(
··$ %
subasta
··% ,
)
··, -
;
··- .
await
¸¸ 
_context
¸¸ 
.
¸¸ 
SaveChangesAsync
¸¸ +
(
¸¸+ ,
)
¸¸, -
;
¸¸- .
return
ºº 
Ok
ºº 
(
ºº 
new
ºº 
{
ºº 
subasta
»» 
,
»» 
mensaje
¼¼ 
=
¼¼ 
$str
¼¼ 9
}
½½ 
)
½½ 
;
½½ 
}
¾¾ 	
}
ÁÁ 
public
ÄÄ 	
class
ÄÄ
 
Subastastart
ÄÄ 
{ÅÅ 
public
ÆÆ 

int
ÆÆ 
	IdSubasta
ÆÆ 
{
ÆÆ 
get
ÆÆ 
;
ÆÆ 
set
ÆÆ  #
;
ÆÆ# $
}
ÆÆ% &
public
ÇÇ 

DateTime
ÇÇ 
?
ÇÇ 
	StartTime
ÇÇ 
{
ÇÇ  
get
ÇÇ! $
;
ÇÇ$ %
set
ÇÇ& )
;
ÇÇ) *
}
ÇÇ+ ,
public
ÈÈ 

DateTime
ÈÈ 
?
ÈÈ 
EndTime
ÈÈ 
{
ÈÈ 
get
ÈÈ "
;
ÈÈ" #
set
ÈÈ$ '
;
ÈÈ' (
}
ÈÈ) *
}ÉÉ 
}ÌÌ ¿_
lD:\Otros\UPN\CaliidadYPruebas\ProyectoGit\Back\AppGreenPageBack\GreenPageAPI\Controllers\OfertaController.cs
	namespace 	
GreenPageAPI
 
. 
Controllers "
{ 
[ 
ApiController 
] 
[ 
Route 

(
 
$str 
) 
] 
public		 

class		 
OfertaController		 !
:		" #

Controller		$ .
{

 
private 
readonly 
GreenPageContext )
_context* 2
;2 3
public 
OfertaController 
(  
GreenPageContext  0
context1 8
)8 9
{ 	
_context 
= 
context 
; 
} 	
[ 	
HttpGet	 
] 
public 
async 
Task 
< 
ActionResult &
<& '
IEnumerable' 2
<2 3
Oferta3 9
>9 :
>: ;
>; <

GetOfertas= G
(G H
)H I
{ 	
return 
await 
_context !
.! "
Ofertas" )
.) *
ToListAsync* 5
(5 6
)6 7
;7 8
} 	
[ 	
HttpGet	 
( 
$str 
) 
] 
public 
async 
Task 
< 
ActionResult &
<& '
Oferta' -
>- .
>. /
	GetOferta0 9
(9 :
int: =
id> @
)@ A
{ 	
var 
oferta 
= 
await 
_context '
.' (
Ofertas( /
./ 0
	FindAsync0 9
(9 :
id: <
)< =
;= >
if 
( 
oferta 
== 
null 
) 
{ 
return   
NotFound   
(    
)    !
;  ! "
}!! 
return## 
oferta## 
;## 
}$$ 	
[&& 	
HttpPost&&	 
]&& 
public'' 
async'' 
Task'' 
<'' 
ActionResult'' &
<''& '
Oferta''' -
>''- .
>''. /

PostOferta''0 :
('': ;
Oferta''; A
oferta''B H
)''H I
{(( 	
if)) 
()) 
oferta)) 
==)) 
null)) 
))) 
{** 
return++ 

BadRequest++ !
(++! "
$str++" =
)++= >
;++> ?
},, 
var// 
ultimaOferta// 
=// 
await// $
_context//% -
.//- .
Ofertas//. 5
.00 
Where00 
(00 
o00 
=>00 
o00 
.00 
	IdSubasta00 '
==00( *
oferta00+ 1
.001 2
	IdSubasta002 ;
)00; <
.11 
OrderByDescending11 "
(11" #
o11# $
=>11% '
o11( )
.11) *
PrecioOferta11* 6
)116 7
.22 
FirstOrDefaultAsync22 $
(22$ %
)22% &
;22& '
if55 
(55 
ultimaOferta55 
!=55 
null55  $
&&55% '
oferta55( .
.55. /
PrecioOferta55/ ;
<=55< >
ultimaOferta55? K
.55K L
PrecioOferta55L X
)55X Y
{66 
return77 

BadRequest77 !
(77! "
$"77" $
$str77$ ^
{77^ _
ultimaOferta77_ k
.77k l
PrecioOferta77l x
}77x y
$str77y z
"77z {
)77{ |
;77| }
}88 
_context99 
.99 
Ofertas99 
.99 
Add99  
(99  !
oferta99! '
)99' (
;99( )
await:: 
_context:: 
.:: 
SaveChangesAsync:: +
(::+ ,
)::, -
;::- .
return<< 
CreatedAtAction<< "
(<<" #
nameof<<# )
(<<) *
	GetOferta<<* 3
)<<3 4
,<<4 5
new<<6 9
{<<: ;
id<<< >
=<<? @
oferta<<A G
.<<G H
IdOferta<<H P
}<<Q R
,<<R S
oferta<<T Z
)<<Z [
;<<[ \
}== 	
[?? 	
HttpGet??	 
(?? 
$str?? )
)??) *
]??* +
public@@ 
async@@ 
Task@@ 
<@@ 
ActionResult@@ &
>@@& '

GetGanador@@( 2
(@@2 3
int@@3 6
	idSubasta@@7 @
)@@@ A
{AA 	
varCC 
ofertaGanadoraCC 
=CC  
awaitCC! &
_contextCC' /
.CC/ 0
OfertasCC0 7
.DD 
WhereDD 
(DD 
oDD 
=>DD 
oDD 
.DD 
	IdSubastaDD #
==DD$ &
	idSubastaDD' 0
)DD0 1
.EE 
OrderByDescendingEE 
(EE 
oEE  
=>EE  "
oEE" #
.EE# $
PrecioOfertaEE$ 0
)EE0 1
.FF 
SelectFF 
(FF 
oFF 
=>FF 
newFF 
{GG 
oHH 
.HH 
PrecioOfertaHH 
,HH 
oII 
.II 
	IdUsuarioII 
,II 
UsuarioJJ 
=JJ 
newJJ 
{KK 
oLL 
.LL 
usuarioLL 
.LL 
	IdUsuarioLL '
,LL' (
oMM 
.MM 
usuarioMM 
.MM 

NomUsuarioMM (
,MM( )
oNN 
.NN 
usuarioNN 
.NN 

ApeUsuarioNN (
,NN( )
oOO 
.OO 
usuarioOO 
.OO 
LoginOO #
}PP 
}QQ 
)QQ 
.RR 	
FirstOrDefaultAsyncRR	 
(RR 
)RR 
;RR 
ifUU 

(UU 
ofertaGanadoraUU 
==UU 
nullUU "
)UU" #
{VV 	
returnWW 
NotFoundWW 
(WW 
$strWW <
)WW< =
;WW= >
}XX 	
return\\ 
Ok\\ 
(\\ 
new\\ 
{]] 	
Mensaje^^ 
=^^ 
$str^^ -
,^^- .
PrecioGanador__ 
=__ 
ofertaGanadora__ *
.__* +
PrecioOferta__+ 7
,__7 8
UsuarioGanador`` 
=`` 
$"`` 
{``  
ofertaGanadora``  .
.``. /
Usuario``/ 6
.``6 7

NomUsuario``7 A
}``A B
$str``B C
{``C D
ofertaGanadora``D R
.``R S
Usuario``S Z
.``Z [

ApeUsuario``[ e
[``e f
$num``f g
]``g h
}``h i
$str``i j
"``j k
}aa 	
)aa	 

;aa
 
}cc 	
[ee 	
HttpGetee	 
(ee 
$stree 3
)ee3 4
]ee4 5
publicff 
asyncff 
Taskff 
<ff 
ActionResultff &
>ff& ' 
GetOfertasPorUsuarioff( <
(ff< =
intff= @
	usuarioIdffA J
)ffJ K
{gg 	
varii 
ofertasusuarioii 
=ii  
awaitii! &
_contextii' /
.ii/ 0
Ofertasii0 7
.jj 
Wherejj 
(jj 
ojj 
=>jj 
ojj 
.jj 
	IdUsuariojj "
==jj# %
	usuarioIdjj& /
)jj/ 0
.kk 
Selectkk 
(kk 
okk 
=>kk 
newkk 
{ll 
omm 
.mm 
IdOfertamm 
,mm 
onn 
.nn 
subastann 
.nn 
Libronn 
.nn  
	Destitulonn  )
,nn) *
ooo 
.oo 
PrecioOfertaoo 
,oo 
opp 
.pp 
	FecOfertapp 
}qq 
)qq 
.rr 
ToListAsyncrr 
(rr 
)rr 
;rr 
iftt 
(tt 
ofertasusuariott 
==tt !
nulltt" &
||tt' )
!tt* +
ofertasusuariott+ 9
.tt9 :
Anytt: =
(tt= >
)tt> ?
)tt? @
{uu 
returnvv 
NotFoundvv 
(vv  
$strvv  C
)vvC D
;vvD E
}ww 
returnyy 
Okyy 
(yy 
ofertasusuarioyy $
)yy$ %
;yy% &
}{{ 	
[}} 	
HttpPut}}	 
(}} 
$str}} 
)}} 
]}} 
public~~ 
async~~ 
Task~~ 
<~~ 
IActionResult~~ '
>~~' (
	PutOferta~~) 2
(~~2 3
int~~3 6
id~~7 9
,~~9 :
Oferta~~; A
oferta~~B H
)~~H I
{ 	
if
 
(
 
id
 
!=
 
oferta
 
.
 
IdOferta
 %
)
% &
{
 
return
 

BadRequest
 !
(
! "
)
" #
;
# $
}
 
_context
 
.
 
Entry
 
(
 
oferta
 !
)
! "
.
" #
State
# (
=
) *
EntityState
+ 6
.
6 7
Modified
7 ?
;
? @
try
 
{
 
await
 
_context
 
.
 
SaveChangesAsync
 /
(
/ 0
)
0 1
;
1 2
}
 
catch
 
(
 *
DbUpdateConcurrencyException
 /
)
/ 0
{
 
if
 
(
 
!
 
_context
 
.
 
Ofertas
 %
.
% &
Any
& )
(
) *
e
* +
=>
, .
e
/ 0
.
0 1
IdOferta
1 9
==
: <
id
= ?
)
? @
)
@ A
{
 
return
 
NotFound
 #
(
# $
)
$ %
;
% &
}
 
else
 
{
 
throw
 
;
 
}
 
}
 
return
 
	NoContent
 
(
 
)
 
;
 
}
 	
[
 	

HttpDelete
	 
(
 
$str
 
)
 
]
 
public
 
async
 
Task
 
<
 
IActionResult
 '
>
' (
DeleteOferta
) 5
(
5 6
int
6 9
id
: <
)
< =
{
 	
var
 
oferta
 
=
 
await
 
_context
 '
.
' (
Ofertas
( /
.
/ 0
	FindAsync
0 9
(
9 :
id
: <
)
< =
;
= >
if
 
(
 
oferta
 
==
 
null
 
)
 
{
 
return
   
NotFound
   
(
    
)
    !
;
  ! "
}
¡¡ 
_context
££ 
.
££ 
Ofertas
££ 
.
££ 
Remove
££ #
(
££# $
oferta
££$ *
)
££* +
;
££+ ,
await
¤¤ 
_context
¤¤ 
.
¤¤ 
SaveChangesAsync
¤¤ +
(
¤¤+ ,
)
¤¤, -
;
¤¤- .
return
¦¦ 
	NoContent
¦¦ 
(
¦¦ 
)
¦¦ 
;
¦¦ 
}
§§ 	
}
¨¨ 
}©© q
kD:\Otros\UPN\CaliidadYPruebas\ProyectoGit\Back\AppGreenPageBack\GreenPageAPI\Controllers\LibroController.cs
	namespace 	
GreenPageAPI
 
. 
Controllers "
{ 
[ 
ApiController 
] 
[ 
Route 

(
 
$str 
) 
] 
public		 

class		 
LibroController		  
:		! "
ControllerBase		$ 2
{

 
private 
readonly 
GreenPageContext )
_context* 2
;2 3
public 
LibroController 
( 
GreenPageContext /
context0 7
)7 8
{ 	
_context 
= 
context 
; 
} 	
[ 	
HttpGet	 
] 
public 
async 
Task 
< 
ActionResult &
<& '
IEnumerable' 2
<2 3
Libro3 8
>8 9
>9 :
>: ;
	GetLibros< E
(E F
)F G
{ 	
var 
libros 
= 
await 
_context '
.' (
Libros( .
. 
Include 
( 
l 
=> 
l 
. 
	Editorial %
)% &
. 
Include 
( 
l 
=> 
l 
. 
Genero "
)" #
. 
Select 
( 
l 
=> 
new 
{ 
l!! 
.!! 
IdLibro!! 
,!! 
l"" 
."" 
	Destitulo"" 
,"" 
l## 
.## 
Estado## 
,## 
l$$ 
.$$ 
ISBN$$ 
,$$ 
l%% 
.%% 
Sinopsys%% 
,%% 
l&& 
.&& 
IdEditorial&& 
,&& 
l'' 
.'' 
IdGenero'' 
,'' 
	Editorial(( 
=(( 
l(( 
.(( 
	Editorial(( '
.((' (
deseditorial((( 4
,((4 5
Genero)) 
=)) 
l)) 
.)) 
Genero)) !
.))! "
	desgenero))" +
}** 
)** 
.++ 
ToListAsync++ 
(++ 
)++ 
;++ 
return-- 
Ok-- 
(-- 
libros-- 
)-- 
;-- 
}// 	
[11 	
HttpGet11	 
(11 
$str11 
)11 
]11 
public22 
async22 
Task22 
<22 
ActionResult22 &
<22& '
Libro22' ,
>22, -
>22- .
GetLibro22/ 7
(227 8
int228 ;
id22< >
)22> ?
{33 	
var44 
libro44 
=44 
await44 
_context44 &
.44& '
Libros44' -
.44- .
	FindAsync44. 7
(447 8
id448 :
)44: ;
;44; <
if66 
(66 
libro66 
==66 
null66 
)66 
{77 
return88 
NotFound88 
(88  
)88  !
;88! "
}99 
return:: 
libro:: 
;:: 
};; 	
[== 	
HttpPost==	 
]== 
public>> 
async>> 
Task>> 
<>> 
ActionResult>> &
<>>& '
Libro>>' ,
>>>, -
>>>- .
	PostLibro>>/ 8
(>>8 9
LibroConSubasta>>9 H
libroConSubasta?? 
)?? 
{@@ 	
varCC 
libroCC 
=CC 
newCC 
LibroCC !
{DD 
IdEditorialEE 
=EE 
libroConSubastaEE -
.EE- .
IdEditorialEE. 9
,EE9 :
IdGeneroFF 
=FF 
libroConSubastaFF *
.FF* +
IdGeneroFF+ 3
,FF3 4
	DestituloGG 
=GG 
libroConSubastaGG +
.GG+ ,
	DestituloGG, 5
,GG5 6
EstadoHH 
=HH 
libroConSubastaHH (
.HH( )
EstadoHH) /
,HH/ 0
ISBNII 
=II 
libroConSubastaII &
.II& '
ISBNII' +
,II+ ,
SinopsysJJ 
=JJ 
libroConSubastaJJ *
.JJ* +
SinopsysJJ+ 3
,JJ3 4
	IdUsuarioKK 
=KK 
libroConSubastaKK +
.KK+ ,
	IdUsuarioKK, 5
}LL 
;LL 
_context\\ 
.\\ 
Libros\\ 
.\\ 
Add\\ 
(\\  
libro\\  %
)\\% &
;\\& '
await]] 
_context]] 
.]] 
SaveChangesAsync]] +
(]]+ ,
)]], -
;]]- .
var`` 
nuevaSubasta``  
=``! "
new``# &
Subasta``' .
{aa 
IdLibrobb 
=bb 
librobb #
.bb# $
IdLibrobb$ +
,bb+ ,
	FecIniciocc 
=cc 
libroConSubastacc  /
.cc/ 0
	FecIniciocc0 9
,cc9 :
FecFinaldd 
=dd 
libroConSubastadd .
.dd. /
FecFinaldd/ 7
,dd7 8

PrecioBaseee 
=ee  
libroConSubastaee! 0
.ee0 1

PrecioBaseee1 ;
,ee; <
	IdUsuarioff 
=ff 
libroConSubastaff  /
.ff/ 0
	IdUsuarioff0 9
}gg 
;gg 
_contextjj 
.jj 
Subastasjj !
.jj! "
Addjj" %
(jj% &
nuevaSubastajj& 2
)jj2 3
;jj3 4
awaitkk 
_contextkk 
.kk 
SaveChangesAsynckk /
(kk/ 0
)kk0 1
;kk1 2
returnmm 
CreatedAtActionmm "
(mm" #
nameofmm# )
(mm) *
GetLibromm* 2
)mm2 3
,mm3 4
newmm5 8
{mm9 :
idmm; =
=mm> ?
libromm@ E
.mmE F
IdLibrommF M
}mmN O
,mmO P
librommQ V
)mmV W
;mmW X
}nn 	
[qq 	
HttpPutqq	 
(qq 
$strqq 
)qq 
]qq 
publicrr 
asyncrr 
Taskrr 
<rr 
IActionResultrr '
>rr' (
PutLibrorr) 1
(rr1 2
intrr2 5
idrr6 8
,rr8 9
LibroUptrr: B
librouptrrC K
)rrK L
{ss 	
varuu 
librouu 
=uu 
newuu 
Librouu !
{vv 
IdLibroww 
=ww 
librouptww "
.ww" #
IdLibroww# *
,ww* +
IdEditorialxx 
=xx 
librouptxx &
.xx& '
IdEditorialxx' 2
,xx2 3
IdGeneroyy 
=yy 
librouptyy #
.yy# $
IdGeneroyy$ ,
,yy, -
	Destitulozz 
=zz 
librouptzz $
.zz$ %
	Destitulozz% .
,zz. /
Estado{{ 
={{ 
libroupt{{ !
.{{! "
Estado{{" (
,{{( )
ISBN|| 
=|| 
libroupt|| 
.||  
ISBN||  $
,||$ %
Sinopsys}} 
=}} 
libroupt}} #
.}}# $
Sinopsys}}$ ,
,}}, -
	IdUsuario~~ 
=~~ 
libroupt~~ $
.~~$ %
	IdUsuario~~% .
} 
; 
if
 
(
 
id
 
!=
 
libro
 
.
 
IdLibro
 #
)
# $
{
 
return
 

BadRequest
 !
(
! "
new
" %
{
& '
Message
( /
=
0 1
$str
2 h
}
i j
)
j k
;
k l
}
 
_context
 
.
 
Entry
 
(
 
libro
  
)
  !
.
! "
State
" '
=
( )
EntityState
* 5
.
5 6
Modified
6 >
;
> ?
try
 
{
 
await
 
_context
 
.
 
SaveChangesAsync
 /
(
/ 0
)
0 1
;
1 2
return
 
Ok
 
(
 
new
 
{
 
Message
  '
=
( )
$str
* H
}
I J
)
J K
;
K L
}
 
catch
 
(
 *
DbUpdateConcurrencyException
 /
)
/ 0
{
 
if
 
(
 
!
 
_context
 
.
 
Libros
 $
.
$ %
Any
% (
(
( )
e
) *
=>
+ -
e
. /
.
/ 0
IdLibro
0 7
==
8 :
id
; =
)
= >
)
> ?
{
 
return
 
NotFound
 "
(
" #
new
# &
{
' (
Message
) 0
=
1 2
$str
3 P
}
Q R
)
R S
;
S T
}
 
else
 
{
 
throw
 
;
 
}
 
}
 
return
 
	NoContent
 
(
 
)
 
;
 
}
 	
[
 	

HttpDelete
	 
(
 
$str
 
)
 
]
 
public
 
async
 
Task
 
<
 
IActionResult
 '
>
' (
DeleteLibro
) 4
(
4 5
int
5 8
id
9 ;
)
; <
{
 	
var
   
libro
   
=
   
await
   
_context
   &
.
  & '
Libros
  ' -
.
  - .
	FindAsync
  . 7
(
  7 8
id
  8 :
)
  : ;
;
  ; <
if
¡¡ 
(
¡¡ 
libro
¡¡ 
==
¡¡ 
null
¡¡ 
)
¡¡ 
{
¢¢ 
return
££ 
NotFound
££ 
(
££  
)
££  !
;
££! "
}
¤¤ 
_context
¦¦ 
.
¦¦ 
Libros
¦¦ 
.
¦¦ 
Remove
¦¦ "
(
¦¦" #
libro
¦¦# (
)
¦¦( )
;
¦¦) *
await
§§ 
_context
§§ 
.
§§ 
SaveChangesAsync
§§ +
(
§§+ ,
)
§§, -
;
§§- .
return
©© 
	NoContent
©© 
(
©© 
)
©© 
;
©© 
}
ªª 	
}
«« 
public
­­ 
class
­­ 
LibroConSubasta
­­ $
{
®® 	
public
°° 
int
°° 
IdEditorial
°° "
{
°°# $
get
°°% (
;
°°( )
set
°°* -
;
°°- .
}
°°/ 0
public
±± 
int
±± 
IdGenero
±± 
{
±±  !
get
±±" %
;
±±% &
set
±±' *
;
±±* +
}
±±, -
public
²² 
string
²² 
	Destitulo
²² #
{
²²$ %
get
²²& )
;
²²) *
set
²²+ .
;
²². /
}
²²0 1
public
³³ 
string
³³ 
Estado
³³  
{
³³! "
get
³³# &
;
³³& '
set
³³( +
;
³³+ ,
}
³³- .
public
´´ 
string
´´ 
ISBN
´´ 
{
´´  
get
´´! $
;
´´$ %
set
´´& )
;
´´) *
}
´´+ ,
public
µµ 
string
µµ 
Sinopsys
µµ "
{
µµ# $
get
µµ% (
;
µµ( )
set
µµ* -
;
µµ- .
}
µµ/ 0
public
¶¶ 
int
¶¶ 
?
¶¶ 
	IdUsuario
¶¶ !
{
¶¶" #
get
¶¶$ '
;
¶¶' (
set
¶¶) ,
;
¶¶, -
}
¶¶. /
public
¹¹ 
DateTime
¹¹ 
	FecInicio
¹¹ %
{
¹¹& '
get
¹¹( +
;
¹¹+ ,
set
¹¹- 0
;
¹¹0 1
}
¹¹2 3
public
ºº 
DateTime
ºº 
FecFinal
ºº $
{
ºº% &
get
ºº' *
;
ºº* +
set
ºº, /
;
ºº/ 0
}
ºº1 2
public
»» 
double
»» 

PrecioBase
»» $
{
»»% &
get
»»' *
;
»»* +
set
»», /
;
»»/ 0
}
»»1 2
}
¼¼ 	
public
¾¾ 
class
¾¾ 
LibroUpt
¾¾  
{
¿¿ 	
public
ÀÀ 
int
ÀÀ 
IdLibro
ÀÀ 
{
ÀÀ  
get
ÀÀ  #
;
ÀÀ# $
set
ÀÀ$ '
;
ÀÀ' (
}
ÀÀ( )
public
ÁÁ 
int
ÁÁ 
IdEditorial
ÁÁ "
{
ÁÁ# $
get
ÁÁ% (
;
ÁÁ( )
set
ÁÁ* -
;
ÁÁ- .
}
ÁÁ/ 0
public
ÂÂ 
int
ÂÂ 
IdGenero
ÂÂ 
{
ÂÂ  !
get
ÂÂ" %
;
ÂÂ% &
set
ÂÂ' *
;
ÂÂ* +
}
ÂÂ, -
public
ÃÃ 
string
ÃÃ 
	Destitulo
ÃÃ #
{
ÃÃ$ %
get
ÃÃ& )
;
ÃÃ) *
set
ÃÃ+ .
;
ÃÃ. /
}
ÃÃ0 1
public
ÄÄ 
string
ÄÄ 
Estado
ÄÄ  
{
ÄÄ! "
get
ÄÄ# &
;
ÄÄ& '
set
ÄÄ( +
;
ÄÄ+ ,
}
ÄÄ- .
public
ÅÅ 
string
ÅÅ 
ISBN
ÅÅ 
{
ÅÅ  
get
ÅÅ! $
;
ÅÅ$ %
set
ÅÅ& )
;
ÅÅ) *
}
ÅÅ+ ,
public
ÆÆ 
string
ÆÆ 
Sinopsys
ÆÆ "
{
ÆÆ# $
get
ÆÆ% (
;
ÆÆ( )
set
ÆÆ* -
;
ÆÆ- .
}
ÆÆ/ 0
public
ÇÇ 
int
ÇÇ 
?
ÇÇ 
	IdUsuario
ÇÇ !
{
ÇÇ" #
get
ÇÇ$ '
;
ÇÇ' (
set
ÇÇ) ,
;
ÇÇ, -
}
ÇÇ. /
}
ÈÈ 	
}ËË ³Ú
jD:\Otros\UPN\CaliidadYPruebas\ProyectoGit\Back\AppGreenPageBack\GreenPageAPI\Controllers\AuthController.cs
	namespace 	
GreenPageAPI
 
. 
Controllers "
{		 
public

 

class

 
AuthController

 
:

  !
ControllerBase

" 0
{ 
private 
readonly 
GreenPageContext )
dataContext* 5
;5 6
public 
AuthController 
( 
GreenPageContext .
context/ 6
)6 7
{ 	
dataContext 
= 
context !
;! "
} 	
[ 	
HttpPost	 
( 
$str  
)  !
]! "
public 
async 
Task 
< 
IActionResult '
>' (
Recuperauser) 5
(5 6
[6 7
FromBody7 ?
]? @
	UserModelA J
	usermodelK T
)T U
{ 	
if 
( 
! 

ModelState 
. 
IsValid #
)# $
{ 
return 

BadRequest !
(! "

ModelState" ,
), -
;- .
} 
var 
user 
= 
await 
dataContext (
.( )
Usuarios) 1
.1 2
FirstOrDefaultAsync2 E
(E F
uF G
=>H J
uK L
.L M
LoginM R
==S U
	usermodelV _
._ `
User` d
)d e
;e f
if 
( 
user 
== 
null 
) 
{   
return!! 
NotFound!! 
(!!  
$str!!  8
)!!8 9
;!!9 :
}"" 
var$$ 
response$$ 
=$$ 
new$$ 
{%% 
message&& 
=&& 
$str&& .
,&&. /

userlogger'' 
='' 
new''  
{(( 
id)) 
=)) 
user)) 
.)) 
	IdUsuario)) '
,))' (
Pregunta** 
=** 
user** #
.**# $
Pregunta**$ ,
}.. 
}// 
;// 
return00 
Ok00 
(00 
response00 
)00 
;00  
}11 	
[44 	
HttpPost44	 
(44 
$str44 
)44 
]44 
public55 
async55 
Task55 
<55 
IActionResult55 '
>55' (
Login55) .
(55. /
[55/ 0
FromBody550 8
]558 9

LoginModel55: D
model55E J
)55J K
{66 	
if77 
(77 
!77 

ModelState77 
.77 
IsValid77 #
)77# $
return77% +

BadRequest77, 6
(776 7

ModelState777 A
)77A B
;77B C
try99 
{:: 
var;; 
user;; 
=;; 
await;;  
GetUserByLoginAsync;;! 4
(;;4 5
model;;5 :
.;;: ;
User;;; ?
);;? @
;;;@ A
if<< 
(<< 
user<< 
==<< 
null<<  
)<<  !
return<<" (
NotFound<<) 1
(<<1 2
$str<<2 J
)<<J K
;<<K L
if>> 
(>> 
!>> 
IsUserActive>> !
(>>! "
user>>" &
)>>& '
)>>' (
return>>) /
Unauthorized>>0 <
(>>< =
$str>>= P
)>>P Q
;>>Q R
if@@ 
(@@ 
!@@ 
IsPasswordValid@@ $
(@@$ %
model@@% *
.@@* +
Pass@@+ /
,@@/ 0
user@@1 5
.@@5 6
Pass@@6 :
)@@: ;
)@@; <
return@@= C
Unauthorized@@D P
(@@P Q
$str@@Q i
)@@i j
;@@j k
varBB 
responseBB 
=BB !
GenerateLoginResponseBB 4
(BB4 5
userBB5 9
)BB9 :
;BB: ;
returnCC 
OkCC 
(CC 
responseCC "
)CC" #
;CC# $
}DD 
catchEE 
(EE 
	ExceptionEE 
exEE 
)EE  
{FF 
returnGG 
HandleExceptionGG &
(GG& '
exGG' )
)GG) *
;GG* +
}HH 
}II 	
privateKK 
asyncKK 
TaskKK 
<KK 
UsuarioKK "
?KK" #
>KK# $
GetUserByLoginAsyncKK% 8
(KK8 9
stringKK9 ?
loginKK@ E
)KKE F
{LL 	
returnMM 
awaitMM 
dataContextMM $
.MM$ %
UsuariosMM% -
.MM- .
FirstOrDefaultAsyncMM. A
(MMA B
uMMB C
=>MMD F
uMMG H
.MMH I
LoginMMI N
==MMO Q
loginMMR W
)MMW X
;MMX Y
}NN 	
staticPP	 
boolPP 
IsUserActivePP !
(PP! "
UsuarioPP" )
userPP* .
)PP. /
{QQ 	
returnRR 
userRR 
.RR 
isactiveRR  
==RR! #
trueRR$ (
;RR( )
}SS 	
privateUU 
staticUU 
boolUU 
IsPasswordValidUU +
(UU+ ,
stringUU, 2
enteredPasswordUU3 B
,UUB C
stringUUD J
storedPasswordUUK Y
)UUY Z
{VV 	
returnWW 
BCryptWW 
.WW 
NetWW 
.WW 
BCryptWW $
.WW$ %
VerifyWW% +
(WW+ ,
enteredPasswordWW, ;
,WW; <
storedPasswordWW= K
)WWK L
;WWL M
}XX 	
privateZZ 
objectZZ !
GenerateLoginResponseZZ ,
(ZZ, -
UsuarioZZ- 4
userZZ5 9
)ZZ9 :
{[[ 	
return\\ 
new\\ 
{]] 
message^^ 
=^^ 
$str^^ )
,^^) *

userlogger__ 
=__ 
new__  
{`` 
idaa 
=aa 
useraa 
.aa 
	IdUsuarioaa '
,aa' (

nomUsuariobb 
=bb  
userbb! %
.bb% &

NomUsuariobb& 0
,bb0 1
idPerfilcc 
=cc 
usercc #
.cc# $
IdPerfilcc$ ,
,cc, -
perfilNombredd  
=dd! "
userdd# '
.dd' (
IdPerfildd( 0
==dd1 3
$numdd4 5
?dd6 7
$strdd8 N
:ddO P
$strddQ X
}ee 
}ff 
;ff 
}gg 	
privateii 
IActionResultii 
HandleExceptionii -
(ii- .
	Exceptionii. 7
exii8 :
)ii: ;
{jj 	
ifll 
(ll 
exll 
.ll 
InnerExceptionll !
!=ll" $
nullll% )
&&ll* ,
exll- /
.ll/ 0
InnerExceptionll0 >
.ll> ?
Messagell? F
.llF G
ContainsllG O
(llO P
$strllP \
)ll\ ]
)ll] ^
{mm 
returnnn 

StatusCodenn !
(nn! "
StatusCodesnn" -
.nn- .'
Status503ServiceUnavailablenn. I
,nnI J
$strnnK t
)nnt u
;nnu v
}oo 
returnqq 

StatusCodeqq 
(qq 
StatusCodesqq )
.qq) *(
Status500InternalServerErrorqq* F
,qqF G
$strqqH j
)qqj k
;qqk l
}rr 	
[vv 	
HttpPostvv	 
(vv 
$strvv 
)vv 
]vv 
publicww 
asyncww 
Taskww 
<ww 
IActionResultww '
>ww' (
Registerww) 1
(ww1 2
[ww2 3
FromBodyww3 ;
]ww; <
Usuarioww= D
usuariowwE L
)wwL M
{xx 	
if}} 
(}} 
string}} 
.}} 
IsNullOrWhiteSpace}} )
(}}) *
usuario}}* 1
.}}1 2

NomUsuario}}2 <
)}}< =
&&}}> @
string~~ 
.~~ 
IsNullOrWhiteSpace~~ )
(~~) *
usuario~~* 1
.~~1 2

ApeUsuario~~2 <
)~~< =
&&~~> @
string 
. 
IsNullOrWhiteSpace )
() *
usuario* 1
.1 2
dni2 5
)5 6
&&7 9
string
 
.
  
IsNullOrWhiteSpace
 )
(
) *
usuario
* 1
.
1 2
Login
2 7
)
7 8
&&
9 ;
string
 
.
  
IsNullOrWhiteSpace
 )
(
) *
usuario
* 1
.
1 2
Pass
2 6
)
6 7
&&
8 :
string
 
.
  
IsNullOrWhiteSpace
 )
(
) *
usuario
* 1
.
1 2
Pregunta
2 :
)
: ;
&&
< >
string
 
.
  
IsNullOrWhiteSpace
 )
(
) *
usuario
* 1
.
1 2
	Respuesta
2 ;
)
; <
)
< =
{
 
return
 

BadRequest
 !
(
! "
$str
" A
)
A B
;
B C
}
 
if
 
(
 
string
 
.
  
IsNullOrWhiteSpace
 )
(
) *
usuario
* 1
.
1 2

NomUsuario
2 <
)
< =
)
= >
{
 
return
 

BadRequest
 !
(
! "
$str
" O
)
O P
;
P Q
}
 
if
 
(
 
!
 
usuario
 
.
 &
ValidarEspaciosIzquierda
 1
(
1 2
usuario
2 9
.
9 :

NomUsuario
: D
)
D E
)
E F
{
 
return
 

BadRequest
 !
(
! "
$str
" `
)
` a
;
a b
}
 
if
 
(
 
!
 
usuario
 
.
 
IsValidLength
 &
(
& '
usuario
' .
.
. /

NomUsuario
/ 9
.
9 :
Trim
: >
(
> ?
)
? @
)
@ A
)
A B
{
 
return
 

BadRequest
 !
(
! "
$str" 
) 
; 
}
 
if
 
(
 
!
 
usuario
 
.
 !
ContainsOnlyLetters
 ,
(
, -
usuario
- 4
.
4 5

NomUsuario
5 ?
)
? @
)
@ A
{
 
return
 

BadRequest
 !
(
! "
$str
" k
)
k l
;
l m
}
 
if
 
(
 
string
 
.
  
IsNullOrWhiteSpace
 )
(
) *
usuario
* 1
.
1 2

ApeUsuario
2 <
)
< =
)
= >
{
 
return
 

BadRequest
 !
(
! "
$str
" Q
)
Q R
;
R S
}
 
if
   
(
   
!
   
usuario
   
.
   &
ValidarEspaciosIzquierda
   1
(
  1 2
usuario
  2 9
.
  9 :

ApeUsuario
  : D
)
  D E
)
  E F
{
¡¡ 
return
¢¢ 

BadRequest
¢¢ !
(
¢¢! "
$str
¢¢" b
)
¢¢b c
;
¢¢c d
}
££ 
if
¤¤ 
(
¤¤ 
!
¤¤ 
usuario
¤¤ 
.
¤¤ 
IsValidLength
¤¤ &
(
¤¤& '
usuario
¤¤' .
.
¤¤. /

ApeUsuario
¤¤/ 9
.
¤¤9 :
Trim
¤¤: >
(
¤¤> ?
)
¤¤? @
)
¤¤@ A
)
¤¤A B
{
¥¥ 
return
¦¦ 

BadRequest
¦¦ !
(
¦¦! "
$str¦¦" 
)¦¦ 
;¦¦ 
}
§§ 
if
¨¨ 
(
¨¨ 
!
¨¨ 
usuario
¨¨ 
.
¨¨ !
ContainsOnlyLetters
¨¨ ,
(
¨¨, -
usuario
¨¨- 4
.
¨¨4 5

ApeUsuario
¨¨5 ?
)
¨¨? @
)
¨¨@ A
{
©© 
return
ªª 

BadRequest
ªª !
(
ªª! "
$str
ªª" m
)
ªªm n
;
ªªn o
}
«« 
var
®® 
existingUser
®® 
=
®® 
await
®® $
dataContext
®®% 0
.
®®0 1
Usuarios
®®1 9
.
®®9 :!
FirstOrDefaultAsync
®®: M
(
®®M N
u
®®N O
=>
®®P R
u
®®S T
.
®®T U
Login
®®U Z
==
®®[ ]
usuario
®®^ e
.
®®e f
Login
®®f k
)
®®k l
;
®®l m
if
¯¯ 
(
¯¯ 
existingUser
¯¯ 
!=
¯¯ 
null
¯¯  $
)
¯¯$ %
{
°° 
return
±± 

BadRequest
±± !
(
±±! "
$str
±±" G
)
±±G H
;
±±H I
}
²² 
if
³³ 
(
³³ 
string
³³ 
.
³³  
IsNullOrWhiteSpace
³³ )
(
³³) *
usuario
³³* 1
.
³³1 2
dni
³³2 5
)
³³5 6
)
³³6 7
{
´´ 
return
µµ 

BadRequest
µµ !
(
µµ! "
$str
µµ" L
)
µµL M
;
µµM N
}
¶¶ 
if
·· 
(
·· 
usuario
·· 
.
·· 
dni
·· 
.
·· 
Length
·· "
!=
··# %
$num
··& '
)
··' (
{
¸¸ 
return
¹¹ 

BadRequest
¹¹ !
(
¹¹! "
$str
¹¹" L
)
¹¹L M
;
¹¹M N
}
ºº 
if
»» 
(
»» 
!
»» 
usuario
»» 
.
»» 
dni
»» 
.
»» 
All
»»  
(
»»  !
char
»»! %
.
»»% &
IsDigit
»»& -
)
»»- .
)
»». /
{
¼¼ 
return
½½ 

BadRequest
½½ !
(
½½! "
$str
½½" Y
)
½½Y Z
;
½½Z [
}
¾¾ 
var
ÁÁ 
existingdni
ÁÁ 
=
ÁÁ 
await
ÁÁ #
dataContext
ÁÁ$ /
.
ÁÁ/ 0
Usuarios
ÁÁ0 8
.
ÁÁ8 9!
FirstOrDefaultAsync
ÁÁ9 L
(
ÁÁL M
u
ÁÁM N
=>
ÁÁO Q
u
ÁÁR S
.
ÁÁS T
dni
ÁÁT W
==
ÁÁX Z
usuario
ÁÁ[ b
.
ÁÁb c
dni
ÁÁc f
)
ÁÁf g
;
ÁÁg h
if
ÂÂ 
(
ÂÂ 
existingdni
ÂÂ 
!=
ÂÂ 
null
ÂÂ #
)
ÂÂ# $
{
ÃÃ 
return
ÄÄ 

BadRequest
ÄÄ %
(
ÄÄ% &
$str
ÄÄ& I
)
ÄÄI J
;
ÄÄJ K
}
ÅÅ 
if
ÉÉ 
(
ÉÉ 
string
ÉÉ 
.
ÉÉ  
IsNullOrWhiteSpace
ÉÉ )
(
ÉÉ) *
usuario
ÉÉ* 1
.
ÉÉ1 2
Login
ÉÉ2 7
)
ÉÉ7 8
)
ÉÉ8 9
{
ÊÊ 
return
ËË 

BadRequest
ËË !
(
ËË! "
$str
ËË" N
)
ËËN O
;
ËËO P
}
ÌÌ 
if
ÍÍ 
(
ÍÍ 
!
ÍÍ 
usuario
ÍÍ 
.
ÍÍ &
ValidarEspaciosIzquierda
ÍÍ 1
(
ÍÍ1 2
usuario
ÍÍ2 9
.
ÍÍ9 :
Login
ÍÍ: ?
)
ÍÍ? @
)
ÍÍ@ A
{
ÎÎ 
return
ÏÏ 

BadRequest
ÏÏ !
(
ÏÏ! "
$str
ÏÏ" T
)
ÏÏT U
;
ÏÏU V
}
ÐÐ 
if
ÑÑ 
(
ÑÑ 
!
ÑÑ 
usuario
ÑÑ 
.
ÑÑ 
IsValidLength
ÑÑ &
(
ÑÑ& '
usuario
ÑÑ' .
.
ÑÑ. /
Login
ÑÑ/ 4
.
ÑÑ4 5
Trim
ÑÑ5 9
(
ÑÑ9 :
)
ÑÑ: ;
)
ÑÑ; <
)
ÑÑ< =
{
ÒÒ 
return
ÓÓ 

BadRequest
ÓÓ !
(
ÓÓ! "
$str
ÓÓ" ^
)
ÓÓ^ _
;
ÓÓ_ `
}
ÔÔ 
if
ÕÕ 
(
ÕÕ 
!
ÕÕ 
usuario
ÕÕ 
.
ÕÕ 
IsValidEmail
ÕÕ %
(
ÕÕ% &
usuario
ÕÕ& -
.
ÕÕ- .
Login
ÕÕ. 3
)
ÕÕ3 4
)
ÕÕ4 5
{
ÖÖ 
return
×× 

BadRequest
×× !
(
××! "
$str
××" _
)
××_ `
;
××` a
}
ØØ 
if
ÛÛ 
(
ÛÛ 
string
ÛÛ 
.
ÛÛ  
IsNullOrWhiteSpace
ÛÛ )
(
ÛÛ) *
usuario
ÛÛ* 1
.
ÛÛ1 2
Pass
ÛÛ2 6
)
ÛÛ6 7
)
ÛÛ7 8
{
ÜÜ 
return
ÝÝ 

BadRequest
ÝÝ !
(
ÝÝ! "
$str
ÝÝ" M
)
ÝÝM N
;
ÝÝN O
}
ÞÞ 
if
ßß 
(
ßß 
!
ßß 
usuario
ßß 
.
ßß 
IsValidPassword
ßß (
(
ßß( )
)
ßß) *
)
ßß* +
{
àà 
return
áá 

BadRequest
áá !
(
áá! "
$str
áá" 
)áá 
;áá 
}
ââ 
if
åå 
(
åå 
string
åå 
.
åå  
IsNullOrWhiteSpace
åå )
(
åå) *
usuario
åå* 1
.
åå1 2
Pregunta
åå2 :
)
åå: ;
)
åå; <
{
ææ 
return
çç 

BadRequest
çç !
(
çç! "
$str
çç" Q
)
ççQ R
;
ççR S
}
èè 
if
ìì 
(
ìì 
string
ìì 
.
ìì  
IsNullOrWhiteSpace
ìì )
(
ìì) *
usuario
ìì* 1
.
ìì1 2
	Respuesta
ìì2 ;
)
ìì; <
)
ìì< =
{
íí 
return
îî 

BadRequest
îî !
(
îî! "
$str
îî" R
)
îîR S
;
îîS T
}
ïï 
if
ðð 
(
ðð 
!
ðð 
usuario
ðð 
.
ðð &
ValidarEspaciosIzquierda
ðð 1
(
ðð1 2
usuario
ðð2 9
.
ðð9 :
	Respuesta
ðð: C
)
ððC D
)
ððD E
{
ññ 
return
òò 

BadRequest
òò !
(
òò! "
$str
òò" X
)
òòX Y
;
òòY Z
}
óó 
if
ôô 
(
ôô 
!
ôô 
usuario
ôô 
.
ôô $
IsValidLengthRespuesta
ôô /
(
ôô/ 0
)
ôô0 1
)
ôô1 2
{
õõ 
return
öö 

BadRequest
öö !
(
öö! "
$ströö" 
)öö 
;öö 
}
÷÷ 
if
úú 
(
úú 
!
úú 
usuario
úú 
.
úú !
ContainsOnlyLetters
úú ,
(
úú, -
usuario
úú- 4
.
úú4 5
	Respuesta
úú5 >
)
úú> ?
)
úú? @
{
ûû 
return
üü 

BadRequest
üü !
(
üü! "
$str
üü" c
)
üüc d
;
üüd e
}
ýý 
if
 
(
 
!
 

ModelState
 
.
 
IsValid
 "
)
" #
{
 
return
 

BadRequest
  
(
  !

ModelState
! +
)
+ ,
;
, -
}
 
usuario
 
.
 
Pass
 
=
 
BCrypt
 !
.
! "
Net
" %
.
% &
BCrypt
& ,
.
, -
HashPassword
- 9
(
9 :
usuario
: A
.
A B
Pass
B F
)
F G
;
G H
if
 
(
 
usuario
 
.
 
IdPerfil
  
==
! #
null
$ (
||
) +
usuario
, 3
.
3 4
IdPerfil
4 <
<=
= ?
$num
@ A
)
A B
{
 
usuario
 
.
 
IdPerfil
  
=
! "
$num
# $
;
$ %
}
 
usuario
 
.
 
isactive
 
=
 
true
 #
;
# $
usuario
 
.
 
FecCreacion
 
=
  !
DateTime
" *
.
* +
Now
+ .
;
. /
try
 
{
 
dataContext
 
.
 
Usuarios
 $
.
$ %
Add
% (
(
( )
usuario
) 0
)
0 1
;
1 2
await
 
dataContext
 !
.
! "
SaveChangesAsync
" 2
(
2 3
)
3 4
;
4 5
return
 
Ok
 
(
 
new
 
{
 
message
  '
=
( )
$str
* <
}
= >
)
> ?
;
? @
}
 
catch
 
(
 
	Exception
 
ex
 
)
  
{
 
var
 
innerException
 "
=
# $
ex
% '
.
' (
InnerException
( 6
!=
7 9
null
: >
?
? @
ex
A C
.
C D
InnerException
D R
.
R S
Message
S Z
:
[ \
ex
] _
.
_ `
Message
` g
;
g h
return
   

BadRequest
   !
(
  ! "
innerException
  " 0
)
  0 1
;
  1 2
}
¡¡ 
}
¢¢ 	
[
¥¥ 
HttpPost
¥¥ 
(
¥¥ 
$str
¥¥ %
)
¥¥% &
]
¥¥& '
public
¦¦ 
async
¦¦ 
Task
¦¦ 
<
¦¦ 
IActionResult
¦¦ +
>
¦¦+ ,
ActualizaPass
¦¦- :
(
¦¦: ;
[
¦¦; <
FromBody
¦¦< D
]
¦¦D E
	PassModel
¦¦F O
	passModel
¦¦P Y
)
¦¦Y Z
{
§§ 
if
¨¨ 
(
¨¨ 
!
¨¨ 

ModelState
¨¨ 
.
¨¨  
IsValid
¨¨  '
)
¨¨' (
{
©© 
return
ªª 

BadRequest
ªª %
(
ªª% &

ModelState
ªª& 0
)
ªª0 1
;
ªª1 2
}
«« 
if
®® 
(
®® 
string
®® 
.
®®  
IsNullOrWhiteSpace
®® -
(
®®- .
	passModel
®®. 7
.
®®7 8
	Respuesta
®®8 A
)
®®A B
)
®®B C
{
¯¯ 
return
°° 

BadRequest
°° %
(
°°% &
$str
°°& J
)
°°J K
;
°°K L
}
±± 
if
³³ 
(
³³ 
string
³³ 
.
³³  
IsNullOrWhiteSpace
³³ -
(
³³- .
	passModel
³³. 7
.
³³7 8
Pass
³³8 <
)
³³< =
)
³³= >
{
´´ 
return
µµ 

BadRequest
µµ %
(
µµ% &
$str
µµ& K
)
µµK L
;
µµL M
}
¶¶ 
var
¹¹ 
user
¹¹ 
=
¹¹ 
await
¹¹  
dataContext
¹¹! ,
.
¹¹, -
Usuarios
¹¹- 5
.
¹¹5 6!
FirstOrDefaultAsync
¹¹6 I
(
¹¹I J
u
¹¹J K
=>
¹¹L N
u
ºº 
.
ºº 
Login
ºº 
==
ºº 
	passModel
ºº $
.
ºº$ %
User
ºº% )
&&
ºº* ,
u
»» 
.
»» 
Pregunta
»» 
==
»» 
	passModel
»» '
.
»»' (
Pregunta
»»( 0
&&
»»1 3
u
¼¼ 
.
¼¼ 
	Respuesta
¼¼ 
==
¼¼ 
	passModel
¼¼ (
.
¼¼( )
	Respuesta
¼¼) 2
)
¼¼2 3
;
¼¼3 4
if
¾¾ 
(
¾¾ 
user
¾¾ 
==
¾¾ 
null
¾¾  
)
¾¾  !
{
¿¿ 
return
ÀÀ 
NotFound
ÀÀ #
(
ÀÀ# $
$str
ÀÀ$ Y
)
ÀÀY Z
;
ÀÀZ [
}
ÁÁ 
var
ÄÄ 
passwordPattern
ÄÄ #
=
ÄÄ$ %
$str
ÄÄ& K
;
ÄÄK L
if
ÅÅ 
(
ÅÅ 
!
ÅÅ 
Regex
ÅÅ 
.
ÅÅ 
IsMatch
ÅÅ "
(
ÅÅ" #
	passModel
ÅÅ# ,
.
ÅÅ, -
Pass
ÅÅ- 1
,
ÅÅ1 2
passwordPattern
ÅÅ3 B
)
ÅÅB C
)
ÅÅC D
{
ÆÆ 
return
ÇÇ 

BadRequest
ÇÇ %
(
ÇÇ% &
$strÇÇ& 
)ÇÇ 
;ÇÇ 
}
ÈÈ 
user
ÍÍ 
.
ÍÍ 
Pass
ÍÍ 
=
ÍÍ 
BCrypt
ÍÍ "
.
ÍÍ" #
Net
ÍÍ# &
.
ÍÍ& '
BCrypt
ÍÍ' -
.
ÍÍ- .
HashPassword
ÍÍ. :
(
ÍÍ: ;
	passModel
ÍÍ; D
.
ÍÍD E
Pass
ÍÍE I
)
ÍÍI J
;
ÍÍJ K
await
ÐÐ 
dataContext
ÐÐ !
.
ÐÐ! "
SaveChangesAsync
ÐÐ" 2
(
ÐÐ2 3
)
ÐÐ3 4
;
ÐÐ4 5
return
ÒÒ 
Ok
ÒÒ 
(
ÒÒ 
new
ÒÒ 
{
ÒÒ 
message
ÒÒ  '
=
ÒÒ( )
$str
ÒÒ* P
}
ÒÒQ R
)
ÒÒR S
;
ÒÒS T
}
ÓÓ 
}×× 
public
ØØ 
class
ØØ 

LoginModel
ØØ 
{
ÙÙ 	
[
ÚÚ 
Required
ÚÚ 
]
ÚÚ 
public
ÛÛ 
string
ÛÛ 
User
ÛÛ 
{
ÛÛ  
get
ÛÛ! $
;
ÛÛ$ %
set
ÛÛ& )
;
ÛÛ) *
}
ÛÛ+ ,
[
ÝÝ 
Required
ÝÝ 
]
ÝÝ 
public
ÞÞ 
string
ÞÞ 
Pass
ÞÞ 
{
ÞÞ  
get
ÞÞ! $
;
ÞÞ$ %
set
ÞÞ& )
;
ÞÞ) *
}
ÞÞ+ ,
}
ßß 	
public
ââ 
class
ââ 
	UserModel
ââ 
{
ãã 	
[
ää 
Required
ää 
]
ää 
public
åå 
string
åå 
User
åå 
{
åå  
get
åå! $
;
åå$ %
set
åå& )
;
åå) *
}
åå+ ,
}
ææ 	
public
èè 
class
èè 
	PassModel
èè 
{
éé 	
[
êê 
Required
êê 
]
êê 
public
ëë 
string
ëë 
User
ëë 
{
ëë  
get
ëë! $
;
ëë$ %
set
ëë& )
;
ëë) *
}
ëë+ ,
[
íí 
Required
íí 
]
íí 
public
îî 
string
îî 
Pregunta
îî "
{
îî# $
get
îî% (
;
îî( )
set
îî* -
;
îî- .
}
îî/ 0
[
ðð 
Required
ðð 
]
ðð 
public
ññ 
string
ññ 
	Respuesta
ññ #
{
ññ$ %
get
ññ& )
;
ññ) *
set
ññ+ .
;
ññ. /
}
ññ0 1
[
óó 
Required
óó 
]
óó 
public
ôô 
string
ôô 
Pass
ôô 
{
ôô  
get
ôô  #
;
ôô# $
set
ôô$ '
;
ôô' (
}
ôô( )
}
õõ 	
}÷÷ 